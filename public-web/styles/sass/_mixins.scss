

@import 'variable';

@mixin clearfix {
    zoom: 1;
    &:before,
    &:after {
        content: '';
        display: table;
    }
    &:after {
        clear: both;
    }
}

//center
@mixin center($position: absolute) {
    position: $position;
    top: 50%;
    left: 50%;
    transform:translateX(-50%) translateY(-50%);
}

@mixin center-horizontal($position: absolute) {
    position: $position;
    left: 50%;
    transform:translateX(-50%);
}

@mixin center-vertical($position: absolute) {
    position: $position;
    top: 50%;
    transform:translateY(-50%);
}

//gradient
@mixin gradient-vertical($start, $stop, $from: 0, $to: 100%) {
    background: $start; // old browsers
    background: linear-gradient(to bottom, $start $from, $stop $to); // W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+
}

@mixin gradient-horizontal($start, $stop, $from: 0, $to: 100%) {
    background: $start; // old browsers
    background: linear-gradient(to right, $start $from, $stop $to); // W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+
}

@mixin gradient-radial($start, $stop, $from: 0, $to: 100%, $shape: circle) {
    background: $start; // old browsers
    background: radial-gradient($shape at center, $start $from,$stop $to); // W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+
}

//ellipsis
@mixin text-ellipsis {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

//多行溢出隐藏 multi-overflow
@mixin multi-text-overflow($index:2) {
    word-break: break-all;
    text-overflow: ellipsis;
    display:-webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $index;
    overflow: hidden;
}

// triangle 三角形函数
@mixin triangle($dir, $size: 10px 10px, $color: currentColor) {
  content:"";
  display: inline-block;
  border-width: 0;
  border-color: transparent;
  border-style: solid;

  @if $dir == top {
    border-bottom-color: $color;
    border-bottom-width: nth($size, 2);
    border-left-width: nth($size, 1) / 2;
    border-right-width: nth($size, 1) / 2;
  }
  @else if $dir == bottom {
    border-top-color: $color;
    border-top-width: nth($size, 2);
    border-left-width: nth($size, 1) / 2;
    border-right-width: nth($size, 1) / 2;
  }
  @else if $dir == left {
    border-right-color: $color;
    border-right-width: nth($size, 1);
    border-top-width: nth($size, 2) / 2;
    border-bottom-width: nth($size, 2) / 2;
  }
  @else if $dir == right {
    border-left-color: $color;
    border-left-width: nth($size, 1);
    border-top-width: nth($size, 2) / 2;
    border-bottom-width: nth($size, 2) / 2;
  }
}

//盒模型上下左右居中对齐
@mixin flex-center(){
  display: flex;
  -justify-content: center;
  align-items: center;
}

